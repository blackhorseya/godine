###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################
bazel_dep(name = "rules_go", version = "0.49.0")
bazel_dep(name = "gazelle", version = "0.38.0")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "com_connectrpc_connect", "com_connectrpc_grpchealth", "com_connectrpc_grpcreflect", "com_github_auth0_go_jwt_middleware_v2", "com_github_bwmarrin_snowflake", "com_github_casbin_casbin_v2", "com_github_casbin_gorm_adapter_v3", "com_github_coreos_go_oidc_v3", "com_github_gin_contrib_sessions", "com_github_gin_contrib_zap", "com_github_gin_gonic_gin", "com_github_go_sql_driver_mysql", "com_github_google_uuid", "com_github_google_wire", "com_github_grpc_ecosystem_go_grpc_middleware", "com_github_redis_go_redis_v9", "com_github_rs_cors", "com_github_segmentio_kafka_go", "com_github_spf13_cobra", "com_github_spf13_viper", "com_github_stretchr_testify", "com_github_swaggo_swag", "com_github_testcontainers_testcontainers_go_modules_mongodb", "com_github_testcontainers_testcontainers_go_modules_redis", "io_gorm_driver_mysql", "io_gorm_driver_postgres", "io_gorm_gorm", "io_opentelemetry_go_contrib_instrumentation_github_com_gin_gonic_gin_otelgin", "io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc", "io_opentelemetry_go_contrib_instrumentation_net_http_otelhttp", "io_opentelemetry_go_otel", "io_opentelemetry_go_otel_exporters_otlp_otlpmetric_otlpmetricgrpc", "io_opentelemetry_go_otel_exporters_otlp_otlptrace_otlptracegrpc", "io_opentelemetry_go_otel_sdk", "io_opentelemetry_go_otel_sdk_metric", "io_opentelemetry_go_otel_trace", "org_golang_google_grpc", "org_golang_google_protobuf", "org_golang_x_net", "org_golang_x_oauth2", "org_mongodb_go_mongo_driver", "org_uber_go_mock", "org_uber_go_zap")

bazel_dep(name = "rules_oci", version = "1.4.0")
bazel_dep(name = "rules_pkg", version = "0.9.1")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "alpine",
    digest = "sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b",
    image = "docker.io/library/alpine",
    platforms = [
        "linux/386",
        "linux/amd64",
        "linux/arm/v6",
        "linux/arm/v7",
        "linux/arm64/v8",
        "linux/ppc64le",
        "linux/s390x",
    ],
)
use_repo(oci, "alpine")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.22.1")

# Alternately, download an SDK for a fixed OS/architecture.
go_sdk.download(
    goarch = "amd64",
    goos = "linux",
    version = "1.22.1",
)

# Register the Go SDK installed on the host.
go_sdk.host()
