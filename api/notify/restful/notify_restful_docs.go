// Package restful Code generated by swaggo/swag. DO NOT EDIT
package restful

import "github.com/swaggo/swag"

const docTemplatenotify_restful = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Sean Zheng",
            "url": "https://blog.seancheng.space",
            "email": "blackhorseya@gmail.com"
        },
        "license": {
            "name": "GPL-3.0",
            "url": "https://spdx.org/licenses/GPL-3.0-only.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/healthz": {
            "get": {
                "description": "Check the health of the service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check the health of the service.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responsex.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responsex.Response"
                        }
                    }
                }
            }
        },
        "/v1/notifications": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of notifications.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Retrieve a list of notifications",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page specifies the page number for pagination.",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Size specifies the number of items per page.",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responsex.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_blackhorseya_godine_entity_domain_notification_model.Notification"
                                            }
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "X-Total-Count": {
                                "type": "int",
                                "description": "Total number of items"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsex.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responsex.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new notification.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Create a new notification",
                "parameters": [
                    {
                        "description": "The request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_blackhorseya_godine_entity_domain_notification_model.Notification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responsex.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_blackhorseya_godine_entity_domain_notification_model.Notification"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsex.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responsex.Response"
                        }
                    }
                }
            }
        },
        "/v1/notifications/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a notification by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Retrieve a notification by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responsex.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_blackhorseya_godine_entity_domain_notification_model.Notification"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsex.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responsex.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responsex.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_blackhorseya_godine_entity_domain_notification_model.Notification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt is the timestamp when the notification was created.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the unique identifier of the notification.",
                    "type": "string"
                },
                "message": {
                    "description": "Message is the content of the notification.",
                    "type": "string"
                },
                "order_id": {
                    "description": "OrderID is the identifier of the order associated with the notification.",
                    "type": "string"
                },
                "sender_id": {
                    "description": "SenderID is the identifier of the user who sent the notification.",
                    "type": "string"
                },
                "status": {
                    "description": "Status is the current status of the notification (e.g., pending, sent).",
                    "type": "string"
                },
                "type": {
                    "description": "Type represents the type of notification (e.g., order_status, delivery_status).",
                    "type": "string"
                },
                "updated_at": {
                    "description": "UpdatedAt is the timestamp when the notification was last updated.",
                    "type": "string"
                },
                "user_id": {
                    "description": "UserID is the identifier of the user to whom the notification is sent.",
                    "type": "string"
                }
            }
        },
        "responsex.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfonotify_restful holds exported Swagger Info so clients can modify it
var SwaggerInfonotify_restful = &swag.Spec{
	Version:          "0.1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Godine Notification Restful API",
	Description:      "Godine Notification Restful API document.",
	InfoInstanceName: "notify_restful",
	SwaggerTemplate:  docTemplatenotify_restful,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfonotify_restful.InstanceName(), SwaggerInfonotify_restful)
}
