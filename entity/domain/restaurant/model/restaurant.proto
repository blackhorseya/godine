syntax = "proto3";
package restaurant;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/blackhorseya/godine/entity/domain/restaurant/model";

// Address is a value object that represents the address of a user.
message Address {
  // Street is the street address of the user.
  // @gotags: bson:"street"
  string street = 1;

  // City is the city where the user is located.
  // @gotags: bson:"city"
  string city = 2;

  // State is the state where the user is located.
  // @gotags: bson:"state"
  string state = 3;

  // ZipCode is the postal code of the user's location.
  // @gotags: bson:"zip_code"
  string zip_code = 4;
}

// Restaurant is a value object that represents a restaurant.
message Restaurant {
  // ID is the unique identifier of the restaurant.
  // @gotags: bson:"_id"
  string id = 1;

  // Name is the name of the restaurant.
  // @gotags: bson:"name"
  string name = 2;

  // Address is the address of the restaurant.
  // @gotags: bson:"address"
  Address address = 3;

  // Menu is the menu of the restaurant.
  // @gotags: bson:"menu"
  repeated MenuItem menu = 4;

  // IsOpen is the availability of the restaurant.
  // @gotags: bson:"is_open"
  bool is_open = 5;

  // CreatedBy is the user who created the restaurant.
  // @gotags: bson:"created_by"
  string created_by = 6;

  // CreatedAt is the timestamp when the restaurant was created.
  // @gotags: bson:"created_at"
  google.protobuf.Timestamp created_at = 7;

  // UpdatedAt is the timestamp when the restaurant was last updated.
  // @gotags: bson:"updated_at"
  google.protobuf.Timestamp updated_at = 8;
}

message MenuItem {
  // ID is the unique identifier of the menu item.
  // @gotags: bson:"_id"
  string id = 1;

  // Name is the name of the menu item.
  // @gotags: bson:"name"
  string name = 2;

  // Description is the description of the menu item.
  // @gotags: bson:"description"
  string description = 3;

  // Price is the price of the menu item.
  // @gotags: bson:"price"
  double price = 4;

  // IsAvailable is the availability of the menu item.
  // @gotags: bson:"is_available"
  bool is_available = 5;

  // Quantity is the stock quantity of the menu item.
  // @gotags: bson:"quantity"
  uint32 quantity = 6;
}

message Order {
  // ID is the unique identifier of the order.
  // @gotags: bson:"_id"
  string id = 1;

  // RestaurantID is the unique identifier of the restaurant.
  // @gotags: bson:"restaurant_id"
  string restaurant_id = 2;

  // CustomerID is the unique identifier of the customer.
  // @gotags: bson:"customer_id"
  string customer_id = 3;

  // Dishes is the list of dishes in the order.
  // @gotags: bson:"dishes"
  repeated Dish dishes = 4;

  // Notes is the notes for the order.
  // @gotags: bson:"notes"
  string notes = 5;

  // Status is the status of the order.
  // @gotags: bson:"status"
  string status = 6;

  // EstimatedAt is the estimated completion time of the order.
  // @gotags: bson:"estimated_at"
  google.protobuf.Timestamp estimated_at = 7;

  // CreatedAt is the timestamp when the order was created.
  // @gotags: bson:"created_at"
  google.protobuf.Timestamp created_at = 8;

  // UpdatedAt is the timestamp when the order was last updated.
  // @gotags: bson:"updated_at"
  google.protobuf.Timestamp updated_at = 9;
}

message Dish {
  // MenuItemID is the unique identifier of the menu item.
  // @gotags: bson:"menu_item_id"
  string menu_item_id = 1;

  // Quantity is the quantity of the dish.
  // @gotags: bson:"quantity"
  uint32 quantity = 2;

  // Notes is the notes for the dish.
  // @gotags: bson:"notes"
  string notes = 3;
}
