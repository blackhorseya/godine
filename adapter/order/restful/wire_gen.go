// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package restful

import (
	"github.com/blackhorseya/godine/adapter/order/wirex"
	biz3 "github.com/blackhorseya/godine/app/domain/order/biz"
	"github.com/blackhorseya/godine/app/domain/order/repo/order"
	"github.com/blackhorseya/godine/app/domain/restaurant/biz"
	biz2 "github.com/blackhorseya/godine/app/domain/user/biz"
	"github.com/blackhorseya/godine/app/infra/configx"
	"github.com/blackhorseya/godine/app/infra/otelx"
	"github.com/blackhorseya/godine/app/infra/storage/mongodbx"
	"github.com/blackhorseya/godine/app/infra/transports/httpx"
	"github.com/blackhorseya/godine/pkg/adapterx"
	"github.com/blackhorseya/godine/pkg/contextx"
	"github.com/blackhorseya/godine/pkg/logging"
	"github.com/google/wire"
	"github.com/spf13/viper"
)

import (
	_ "github.com/blackhorseya/godine/api/order/restful"
)

// Injectors from wire.go:

func New(v *viper.Viper) (adapterx.Restful, error) {
	application, err := initApplication()
	if err != nil {
		return nil, err
	}
	iRestaurantBiz := biz.NewRestaurantHTTPClient()
	iMenuBiz := biz.NewMenuHTTPClient()
	iUserBiz := biz2.NewUserHTTPClient()
	client, err := mongodbx.NewClient(application)
	if err != nil {
		return nil, err
	}
	iOrderRepo := order.NewMongodb(client)
	iOrderBiz := biz3.NewOrderBiz(iRestaurantBiz, iMenuBiz, iUserBiz, iOrderRepo)
	injector := &wirex.Injector{
		A:            application,
		OrderService: iOrderBiz,
	}
	server, err := httpx.NewServer(application)
	if err != nil {
		return nil, err
	}
	restful := newRestful(injector, server)
	return restful, nil
}

// wire.go:

func initApplication() (*configx.Application, error) {
	app, err := configx.LoadApplication(&configx.C.OrderRestful)
	if err != nil {
		return nil, err
	}

	err = logging.Init(app.Log)
	if err != nil {
		return nil, err
	}

	err = otelx.SetupOTelSDK(contextx.Background(), app)
	if err != nil {
		return nil, err
	}

	return app, nil
}

var providerSet = wire.NewSet(
	newRestful, wire.Struct(new(wirex.Injector), "*"), initApplication, httpx.NewServer, biz3.NewOrderBiz, biz.NewRestaurantHTTPClient, biz.NewMenuHTTPClient, biz2.NewUserHTTPClient, order.NewMongodb, mongodbx.NewClient,
)
