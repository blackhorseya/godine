/*
 * Godine Order Restful API
 * Godine Order Restful API document.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blackhorseya@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * Generator version: 7.7.0-SNAPSHOT
 */

import http from 'k6/http';
import {check, group, sleep} from 'k6';
import errorHandler from './errorHandler.js';

const scenarios = {
  average_load: {
    executor: 'ramping-vus',
    stages: [
      {duration: '20s', target: 10},
      {duration: '40s', target: 10},
      {duration: '20s', target: 50},
      {duration: '40s', target: 50},
      {duration: '20s', target: 100},
      {duration: '40s', target: 100},
    ],
  },
  peak_load: {
    executor: 'constant-vus',
    vus: 100,
    duration: '1m',
  },
};

const {SCENARIO} = __ENV;

export const options = {
  cloud: {
    // Project: Default project
    projectID: 3690299,
    // Test runs with the same name groups test runs together.
    name: 'godine order restful api test',
  },

  // define thresholds
  thresholds: {
    http_req_failed: ['rate<0.01'], // http errors should be less than 1%
    http_req_duration: ['p(99)<1000'], // 99% of requests should be below 1s
  },

  // define scenarios
  scenarios: SCENARIO ? {
    [SCENARIO]: scenarios[SCENARIO],
  } : scenarios,
};

const BASE_URL = 'http://prod-godine.seancheng.space/api';

// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

export default function() {
  group('/v1/orders/{order_id}', () => {
    let orderId = '1809363491119697920'; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1:
    {
      let url = BASE_URL + `/v1/orders/${orderId}`;
      let request = http.get(url);

      check(request, {
        'OK': (r) => r.status === 200,
      });
    }
  });

  group('/v1/orders/{order_id}/status', () => {
    let orderId = '1809363491119697920'; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1:
    {
      let url = BASE_URL + `/v1/orders/${orderId}/status`;
      let body = {'status': 'confirmed'};
      let params = {
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
        },
      };
      let request = http.patch(url, JSON.stringify(body), params);

      check(request, {
        'OK': (r) => r.status === 200,
      });
    }
  });

  group('/healthz', () => {

    // Request No. 1:
    {
      let url = BASE_URL + `/healthz`;
      let request = http.get(url);

      check(request, {
        'OK': (r) => r.status === 200,
      });
    }
  });

  group('/v1/orders',
      () => {
        let size = '10'; // specify value as there is no example value for this parameter in OpenAPI spec
        let page = '1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let restaurantId = ''; // specify value as there is no example value for this parameter in OpenAPI spec
        let userId = ''; // specify value as there is no example value for this parameter in OpenAPI spec
        let status = ''; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1:
        {
          let url = BASE_URL +
              `/v1/orders?page=${page}&restaurant_id=${restaurantId}&size=${size}&status=${status}&user_id=${userId}`;
          let request = http.get(url);

          let got = check(request, {
            'List orders ok': (r) => r.status === 200,
          });

          errorHandler.logError(!got, request);

          sleep(SLEEP_DURATION);
        }

        // Request No. 2:
        {
          let url = BASE_URL + `/v1/orders`;
          let body = {
            'items': [
              {
                'menu_item_id': '6685d61813c4956eac2592d0',
                'quantity': 5,
              },
              {
                'menu_item_id': '6685d61d13c4956eac2592d1',
                'quantity': 3,
              },
            ],
            'restaurant_id': '6685d60013c4956eac2592cf',
            'user_id': '6685d5d9a1fddcdd0872b0ed',
          };
          let params = {
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json',
            },
          };
          let request = http.post(url, JSON.stringify(body), params);

          let got = check(request, {
            'Create order ok': (r) => r.status === 200,
          });

          errorHandler.logError(!got, request);
        }
      });
}
